openapi: 3.0.1
info:
  title: Recommendation Engine
  description: |+
    Recommendation Engine is a new type of collaborative filtering recommender based on the Correlated Cross-Occurrence algorithm (CCO), which can use data from a wide variety of sources to tune and make recommendations better.
  version: '1.0.0'
  x-additionalinfo: |+
    Suggested Use Cases:
    - This microservice can be used as a solution to help businesses better understand and connect with their customers, engage new prospects and increase revenue. For example, it can be used to improve visitor experience and optimize operations in retail, leisure, and other sectors by identifying the type of demogrpahic that frequents a certain place the most. It can also be used to create intelligent prospect lists that ensure one is always maximizing their marketing investment.
  x-subscribelink: recommendation_engine
  x-apitype: small file
  x-apitypedescription: |+
    Fast | Single-Call | 10MB/Call
  x-inputfilelimit: |+
    Process up to 10MB of data per API call.
  x-responsetime: |+
    Response rate is fast due to small data transfer per call made.
  x-billingmethod: |+
    The API is billed by per request.
  x-notes: |+
    File size cannot exceed 10 MB.
  x-apidetailsdesc: |+
     It's a type of collaborative filtering recommender based on the Correlated Cross-Occurrence algorithm
servers:
  - url: 'https://dev-apis.sentient.io/recommedationengine/microservices/dataanalytics'
tags:
- name: "v1.0.0"
  description: "Published Date - Oct 30, 2020"
paths:
  /readdevent/v0/getresults:
    post:
      tags:
        - v1.0.0
      description:
        This API is used to add the event in recommendation engine
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/readdeventsuccess'
              example: 
                message: Successfully Added
                status: Success
        '419':
          description: Input Field Missing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inputfieldmissing'
      
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/servererror'
      security:
        - APIAuthorizer: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/readdeventinput'
        required: true
  /readditem/v0/getresults:
    post:
      tags:
        - v1.0.0
      description:
        This API is used to add the item and properties in recommendation engine
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/readditemsuccess'
              example: 
                message: Successfully Added
                status: Success
        '419':
          description: Input Field Missing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inputfieldmissing'
      
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/servererror'
      security:
        - APIAuthorizer: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/readditeminput'
        required: true
  /redeleteevent/v0/getresults:
    post:
      tags:
        - v1.0.0
      description:
        This API is used to delete the event in recommendation engine
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/redeleteeventsuccess'
              example: 
                message: Successfully Deleted
                status: Success
        '419':
          description: Input Field Missing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inputfieldmissing'
      
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/servererror'
      security:
        - APIAuthorizer: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/redeleteeventinput'
        required: true
  /reitem/v0/getresults:
    post:
      tags:
        - v1.0.0
      description:
        This API is used to get recommendation based on the item
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reitemsuccess'
              example: 
                re_id: efe8d908-9472-11ec-8d59-66e65c6117ca
                item: Page 24
                score: 1.3801217079162598
                properties:
                - pageurl:
                  - www.page24.com
                  description:
                  - Page 24 description
                  pagetitle:
                  - Page 24 Title
        '419':
          description: Input Field Missing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inputfieldmissing'
      
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/servererror'
      security:
        - APIAuthorizer: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/reiteminput'
        required: true
  
  /reuser/v0/getresults:
    post:
      tags:
        - v1.0.0
      description:
        This API is used to get the recommendation based on the user
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reusersuccess'
              example: 
                re_id: efe8d908-9472-11ec-8d59-66e65c6117ca
                item: Page 24
                score: 1.3801217079162598
                properties:
                - pageurl:
                  - www.page24.com
                  description:
                  - Page 24 description
                  pagetitle:
                  - Page 24 Title
        '419':
          description: Input Field Missing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inputfieldmissing'
      
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/servererror'
      security:
        - APIAuthorizer: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/reuserinput'
        required: true
  /retrainengine/v0/getresults:
    post:
      tags:
        - v1.0.0
      description:
        This API is used to train the recommendation engine
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/retraineventsuccess'
              example: 
                message: Training is Scheduled
                status: Success
        '419':
          description: Input Field Missing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inputfieldmissing'
      
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/servererror'
      security:
        - APIAuthorizer: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/retraineventinput'
        required: true
  /rebulkuploadevent/v0/getresults:
    post:
      tags:
        - v1.0.0
      description:
        This API is used to bulk upload the event in recommendation engine
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rebulkuploadeventsuccess'
              example: 
                message: Partially Added
                status: Success
                error_rows: []
        '419':
          description: Input Field Missing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inputfieldmissing'
      
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/servererror'
      security:
        - APIAuthorizer: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/rebulkuploadeventinput'
        required: true
  /rebulkuploaditem/v0/getresults:
    post:
      tags:
        - v1.0.0
      description:
        This API is used to bulk upload the item and properties in recommendation engine
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rebulkuploaditemsuccess'
              example: 
                message: Partially Added
                status: Success
                error_rows: []
        '419':
          description: Input Field Missing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inputfieldmissing'
      
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/servererror'
      security:
        - APIAuthorizer: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/rebulkuploaditeminput'
        required: true
components:
  schemas:
    readdeventsuccess:
      type: object
      properties:
        message:
          type: string
          description: The message of the API call.
          example: Successfully Added
        status:
          type: string
          description: The status of the API call.
          example: Success
    readditemsuccess:
      type: object
      properties:
        message:
          type: string
          description: The message of the API call.
          example: Successfully Added
        status:
          type: string
          description: The status of the API call.
          example: Success
    redeleteeventsuccess:
      type: object
      properties:
        message:
          type: string
          description: The message of the API call.
          example: Successfully Deleted
        status:
          type: string
          description: The status of the API call.
          example: Success
    rebulkuploadeventsuccess:
      type: object
      properties:
        message:
          type: string
          description: The message of the API call.
          example: Partially Added
        status:
          type: string
          description: The status of the API call.
          example: Success
        error_rows:
          type: string
          description: The status of the API call.
          example: []
    rebulkuploaditemsuccess:
      type: object
      properties:
        message:
          type: string
          description: The message of the API call.
          example: Partially Added
        status:
          type: string
          description: The status of the API call.
          example: Success
        error_rows:
          type: string
          description: The status of the API call.
          example: []
    reitemsuccess:
      type: object
      properties:
        result:
          type: array
          description: The result of the API call.
          example: UR input processed
          items:
            type: object
            properties:
              re_id:
                type: string
                description: The result of the API call.
                example: efe8d908-9472-11ec-8d59-66e65c6117ca
              item:
                type: string
                description: The result of the API call.
                example: Page 30
              score:
                type: string
                description: The result of the API call.
                example: 2.48592472076416
              properties:
                type: array
                description: The result of the API call.
                example: List of objects
                items:
                  type: object
                  properties:
                    pageurl:
                      type: string
                      description: The result of the API call.
                      example: ["www.page24.com","www.page25.com"]
                    description:
                      type: string
                      description: The result of the API call.
                      example: ["Page 24 description","Page 25 description"]
                    pagetitle:
                      type: string
                      description: The result of the API call.
                      example: ["Page 24 Title","Page 25 Title"]
    reusersuccess:
      type: object
      properties:
        result:
          type: array
          description: The result of the API call.
          example: UR input processed
          items:
            type: object
            properties:
              re_id:
                type: string
                description: The result of the API call.
                example: efe8d908-9472-11ec-8d59-66e65c6117ca
              item:
                type: string
                description: The result of the API call.
                example: Page 30
              score:
                type: string
                description: The result of the API call.
                example: 2.48592472076416
              properties:
                type: array
                description: The result of the API call.
                example: List of objects
                items:
                  type: object
                  properties:
                    pageurl:
                      type: string
                      description: The result of the API call.
                      example: ["www.page24.com","www.page25.com"]
                    description:
                      type: string
                      description: The result of the API call.
                      example: ["Page 24 description","Page 25 description"]
                    pagetitle:
                      type: string
                      description: The result of the API call.
                      example: ["Page 24 Title","Page 25 Title"]
    retraineventsuccess:
      type: object
      properties:
        message:
          type: string
          description: The message of the API call.
          example: Training is Scheduled
        status:
          type: string
          description: The status of the API call.
          example: Success
    forbidden:
      type: object
      properties:
        message:
          type: string
          example: Access Denied Unauthorized User
        status:
          type: string
          example: Failure
    notfound:
      type: object
      properties:
        message:
          type: string
          example: Invalid Request URL
        status:
          type: string
          example: Failure
    servererror:
      type: object
      properties:
        message:
          type: string
          example: Internal Server Error
        status:
          type: string
          example: Failure
    inputfieldmissing:
      type: object
      properties:
        message:
          type: string
          example: Input Field Missing
        status:
          type: string
          example: Failure
    versions:
      type: object
      properties: 
        v1.0.0:
          type: array
          items:
            oneOf:
              - type: string
                example: Published Date - March 30, 2022
                x-details: Initial version release
                description: Latest Version
    rebulkuploadeventinput:
      type: object
      required:
        - file
        - engine_name
        - event
      properties:
        file:
          type: string
          format: binary
          default: true
          example: sample.wav
          description: Maximum file size up to 10 MB.
        engine_name:
          type: string
          default: true
          description: |+ 
             Recommendation engine name
          example: <engine name>
        event:
          type: string
          default: true
          description: |+ 
             The value must be one the "name"s in the "indicators" array from the UR engine's JSON config.
          example: pageurl
    rebulkuploaditeminput:
      type: object
      required:
        - file
        - engine_name
        - properties
      properties:
        file:
          type: string
          format: binary
          default: true
          example: sample.wav
          description: Maximum file size up to 10 MB.
        engine_name:
          type: string
          default: true
          description: |+ 
             Recommendation engine name
          example: <engine name>
        properties:
          type: string
          default: true
          description: |+ 
             The value must be one the "name"s in the "indicators" array from the UR engine's JSON config.
          example: ["pagetile","description","pageurl"]
    retraineventinput:
      type: object
      required:
        - engine_name
        - item
      properties:
        engine_name:
          type: string
          default: true
          description: |+ 
             Recommendation engine name
          example: <engine name>
    reiteminput:
      type: object
      required:
        - engine_name
        - item
      properties:
        engine_name:
          type: string
          default: true
          description: |+ 
             Recommendation engine name
          example: <engine name>
        item:
          type: string
          default: true
          example: Page 15
          description: |+
            It contains the unique item identifier
        item_bias:
          type: string
          default: true
          example: Page 15
          description: |+
            This tells the recommender to return items similar to this the item specified.
        item_set:
          type: string
          default: true
          example: []
          description: |+
            It contains a list of unique item identifiers
        item_set_bias:
          type: string
          default: true
          example: 
          description: |+
        offset:
          type: string
          example: 0
          description: |+
            Rank/position to start returning recommendations from
        limit:
          type: string
          example: 4
          description: |+
            Max number of recommendations to return
        rules:
          type: string
          example: []
          description: |+
            Array of fields values and biases to use in this query.
        date_range:
          type: string
          example: {}
          description: |+
            Values for the before and after are strings in ISO 8601 format.
        blacklist_items:
          type: string
          example: []
          description: |+
             It specifies event types this part of the query specifies individual items to remove from returned recommendations.
        return_self:
          type: string
          example: false
          description: |+
            Its boolean asking to include the item that was part of the query as part of the results. Defaults to false.
    reuserinput:
      type: object
      required:
        - engine_name
        - user
      properties:
        engine_name:
          type: string
          default: true
          description: |+ 
             Recommendation engine name
          example: <engine name>
        user:
          type: string
          default: true
          example: User 10
          description: |+
            This is whatever string you use to identify a user.
        user_bias:
          type: string
          default: true
          example: User 10
          description: |+
            This tells the recommender to return recommendations based on the user's event history
        offset:
          type: string
          example: 0
          description: |+
            Rank/position to start returning recommendations from
        limit:
          type: string
          example: 4
          description: |+
            Max number of recommendations to return
        rules:
          type: string
          example: []
          description: |+
            Array of fields values and biases to use in this query.
        date_range:
          type: string
          example: {}
          description: |+
            Values for the before and after are strings in ISO 8601 format.
        blacklist_items:
          type: string
          example: []
          description: |+
             It specifies event types this part of the query specifies individual items to remove from returned recommendations.
        return_self:
          type: string
          example: false
          description: |+
            Its boolean asking to include the item that was part of the query as part of the results. Defaults to false.
    redeleteeventinput:
      type: object
      required:
        - engine_name
        - item
        - event_time
      properties:
        engine_name:
          type: string
          default: true
          description: |+ 
             Recommendation engine name
          example: <engine name>
        item:
          type: string
          default: true
          example: Page 15
          description: |+
            The id for items that correspond to the indicator name. May be a product-id, category-id, a tag-id, search term, location, anything that the event represents.
        event_time:
          type: string
          default: true
          example: "2022-01-19T21:02:49.228Z"
          description: |+
            The ISO8601 formatted string for the time the event occurred.
    readditeminput:
      type: object
      required:
        - engine_name
        - item
        - event_time
      properties:
        engine_name:
          type: string
          default: true
          description: |+ 
             Recommendation engine name
          example: <engine name>
        item:
          type: string
          default: true
          example: Page 15
          description: |+
            The id for items that correspond to the indicator name. May be a product-id, category-id, a tag-id, search term, location, anything that the event represents.
        properties:
          type: object
          properties:
            pagetitle:
              type: string
              example: [Page title] 
            pageurl:
              type: string
              example: [Page url] 
        event_time:
          type: string
          default: true
          example: "2022-01-19T21:02:49.228Z"
          description: |+
            The ISO8601 formatted string for the time the event occurred.
    readdeventinput:
      type: object
      required:
        - engine_name
        - event
        - user
        - item
        - event_time
      properties:
        engine_name:
          type: string
          default: true
          description: |+ 
             Recommendation engine name
          example: <engine name>
        event:
          type: string
          default: true
          description: |+ 
             The value must be one the "name"s in the "indicators" array from the UR engine's JSON config.
          example: pageurl
        user:
          type: string
          default: true
          example: User 10
          description: |+
            This is whatever string you use to identify a user.
        item:
          type: string
          default: true
          example: Page 15
          description: |+
            The id for items that correspond to the indicator name. May be a product-id, category-id, a tag-id, search term, location, anything that the event represents.
        event_time:
          type: string
          default: true
          example: "2022-01-19T21:02:49.228Z"
          description: |+
            The ISO8601 formatted string for the time the event occurred.
  securitySchemes:
    APIAuthorizer:
      type: apiKey
      name: x-api-key
      in: header
      x-amazon-apigateway-authtype: custom
      description: Authentication is done using the x-api-key in the request header
